{"version":3,"sources":["components/Header.js","Helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardaResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardaError","obtenerDatos","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calculaMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","onChange","id","type","check","text","htmlFor","ContenedorResumen","Resumen","Mensaje","p","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fc6988a3.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color:#26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n  font-size: 2rem;\r\n  margin: 0;\r\n  font-family: 'Slabo 27px', serif;\r\n  text-align: center;\r\n`;\r\n\r\n\r\nconst Header = ({titulo}) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    );\r\n}\r\n\r\nexport default Header;","// obtiene la diferencia de años\r\nexport function obtenerDiferenciaYear(year){\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\n// calcula el total a pagar segun la marca\r\nexport function calculaMarca(marca){\r\n    let incremento;\r\n\r\n    switch(marca){\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\n// calcula el tipo de seguro\r\nexport function obtenerPlan(plan){\r\n    return plan === 'basico' ? 1.20 : 1.50 ;\r\n}\r\n\r\n// muestra la primer letra mayuscula\r\nexport function primerMayuscula(texto){\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, {useState} from 'react'\r\nimport styled from '@emotion/styled'\r\nimport {obtenerDiferenciaYear, calculaMarca, obtenerPlan} from '../Helper'\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  border: 1px solid #e1e1e1;\r\n  -webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: #26C6DA;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\n\r\n\r\nconst Formulario = ({guardaResumen,guardarCargando}) => {\r\n\r\n    const [datos, guardarDatos] = useState({\r\n        marca:'',\r\n        year:'',\r\n        plan:''\r\n    });\r\n\r\n    const [error, guardaError] = useState(false);\r\n\r\n    // extraer valores del state\r\n    const {marca, year, plan} = datos;\r\n\r\n    // leer los datos del formulario y colorcarlos en el state\r\n    const obtenerDatos = (e) => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    // Cuando el usuario presiona submit\r\n    const cotizarSeguro = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(marca.trim() === '' || year.trim() === '' || plan.trim() === ''){\r\n            guardaError(true);\r\n            return;\r\n        }\r\n\r\n        guardaError(false);\r\n\r\n        // una base de 2000\r\n        let resultado = 2000;\r\n\r\n        // diferencia de años\r\n        const diferencia =  obtenerDiferenciaYear(year);\r\n\r\n        // por cada año hay que restar el 3% del valor\r\n        resultado -= (( diferencia * 3 ) * resultado) / 100;\r\n\r\n        // Americano 15%\r\n        // Asiatico 5%\r\n        // Europeo 30%\r\n        resultado = calculaMarca(marca) * resultado;\r\n\r\n        // Basico aumenta 20%\r\n        // Completo 50%\r\n        const incrementoPlan = obtenerPlan(plan);\r\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n\r\n        guardarCargando(true);\r\n\r\n        setTimeout(() => {\r\n            guardarCargando(false);\r\n            guardaResumen({\r\n                cotizacion: resultado,\r\n                datos\r\n            });\r\n        }, 3000);\r\n\r\n        // Total\r\n        //console.log(resultado);\r\n        // guardaResumen({\r\n        //     cotizacion: resultado,\r\n        //     datos\r\n        // });\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={cotizarSeguro}>\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select name=\"marca\" value={marca} onChange={obtenerDatos}>\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asiatico</option>\r\n                    <option value=\"frances\">frances</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select name=\"year\" value={year} onChange={obtenerDatos}>\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio id=\"basico\" type=\"radio\" name=\"plan\" value=\"basico\" check={plan === \"basico\"} text=\"basico\" onChange={obtenerDatos}/>\r\n                <label htmlFor =\"basico\">Básico</label>\r\n                <InputRadio id=\"completo\" type=\"radio\" name=\"plan\" value=\"completo\" check={plan === \"completo\"}  onChange={obtenerDatos}/>\r\n                <label htmlFor =\"completo\">Completo</label>\r\n            </Campo>\r\n\r\n            <Boton type=\"submit\" >Cotizar</Boton>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Formulario;","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport {primerMayuscula} from '../Helper'\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({datos}) => {\r\n\r\n    const {marca, year, plan} = datos;\r\n\r\n    if(marca === '' || year === '' || plan === ''){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen de cotizacion</h2>\r\n            <ul>\r\n                <li>Marca:{primerMayuscula(marca)}</li>\r\n                <li>Plan:{primerMayuscula(plan)}</li>\r\n                <li>Año del auto:{primerMayuscula(year)}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n}\r\n\r\nexport default Resumen;","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127 ,224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n`;\r\n \r\n\r\nconst Resultado = ({cotizacion}) => {\r\n\r\n    if(cotizacion === 0){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TransitionGroup component=\"span\" className=\"resultado\">\r\n                <CSSTransition classNames=\"resultado\" key={cotizacion} timeout={{ enter: 500, exit: 500}}>\r\n                    <Mensaje>Total: <span>{cotizacion}</span></Mensaje>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resultado;","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\"></div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, {useState, Fragment} from 'react';\nimport Header from './components/Header';\nimport styled from '@emotion/styled'\nimport Formulario from './components/Formulario';\nimport Resumen from './components/Resumen';\nimport Resultado from './components/Resultado';\nimport Spinner from './components/Spinner';\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`;\n\n\nfunction App() {\n\n  const [resumen, guardaResumen] = useState({\n    cotizacion: 0,\n    datos:{\n      marca:'',\n      year:'',\n      plan: ''\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  const {datos, cotizacion} = resumen;\n\n  return (\n    <Contenedor>\n      <Header\n        titulo=\"Cotizador de autos\"\n      ></Header>\n      <ContenedorFormulario>\n        <Formulario\n            guardaResumen={guardaResumen}\n            guardarCargando={guardarCargando}\n        />\n        {cargando ? <Spinner /> : \n        <Fragment>\n          <Resumen  datos={datos} /> \n          <Resultado cotizacion={cotizacion} />\n        </Fragment>\n        }\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}